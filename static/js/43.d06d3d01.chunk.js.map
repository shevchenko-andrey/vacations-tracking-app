{"version":3,"file":"static/js/43.d06d3d01.chunk.js","mappings":"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","sources":["screens/Dashboard/Dushboard.models.ts","screens/Dashboard/DushboardTableView/DushboardTableView.tsx","screens/Dashboard/Dushboard.tsx","service/vacationsRequestService.ts","shared/Header/Header.tsx","shared/Layout/Layout.tsx"],"sourcesContent":["export enum ViewMod {\n  TABLE_VIEW = 'table view',\n  CALENDAR_VIEW = 'calendar view',\n}\n\nexport enum FilterMod {\n  ACTUAL = 'actual',\n  HISTORY = 'history',\n}\n","import { DataGrid, GridColDef, GridValidRowModel } from '@mui/x-data-grid';\nimport { Box, Skeleton, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { IRequest } from '../../../models/request.models';\nimport { getRequests } from '../../../service/vacationsRequestService';\nimport { FilterMod } from '../Dushboard.models';\n\nconst TABLE_COLUMNS: GridColDef<GridValidRowModel, string, string>[] = [\n  { field: 'id', headerName: 'Absence ID', width: 130 },\n  { field: 'type', headerName: 'Type', width: 120 },\n  { field: 'startDate', headerName: 'Start Date', width: 130 },\n  { field: 'endDate', headerName: 'End Date', width: 130 },\n  {\n    field: 'notes',\n    headerName: 'Notes',\n    width: 500,\n  },\n  {\n    field: 'actions',\n    headerName: 'Actions',\n    width: 130,\n  },\n];\n\ninterface ITableViewProps {\n  filter: FilterMod;\n}\n\nexport const DushBoardTableView = ({ filter }: ITableViewProps) => {\n  const [tableRows, setTableRows] = useState<IRequest[] | []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchUserRequest = async () => {\n      const tableRows = await getRequests({ filter });\n      setTableRows(tableRows);\n    };\n    try {\n      setIsLoading(true);\n      fetchUserRequest();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [filter]);\n\n  if (isLoading) {\n    return (\n      <Skeleton width={'100%'} component=\"div\" height=\"400px\">\n        <DataGrid rows={tableRows} columns={TABLE_COLUMNS} />\n      </Skeleton>\n    );\n  }\n  if (tableRows.length < 1) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Typography>First add data</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <DataGrid\n      rows={tableRows}\n      columns={TABLE_COLUMNS}\n      pageSize={5}\n      rowsPerPageOptions={[5]}\n      checkboxSelection\n    />\n  );\n};\n","import React, { SetStateAction, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport { Layout } from '../../shared/Layout';\nimport { FilterMod, ViewMod } from './Dushboard.models';\n\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n  Box,\n  Fab,\n  Typography,\n  Button,\n} from '@mui/material';\n\nimport { DushBoardTableView } from './DushboardTableView';\n\nexport default function Dashboard() {\n  const [filter, setFilter] = useState(FilterMod.ACTUAL);\n  const [selectedView, setSelectedView] = useState(ViewMod.TABLE_VIEW);\n\n  const handleTogleFilter = (\n    _: React.MouseEvent<HTMLElement>,\n    filter: SetStateAction<FilterMod>\n  ) => {\n    setFilter(filter);\n  };\n\n  const handleChangeView = () => {\n    selectedView === ViewMod.TABLE_VIEW\n      ? setSelectedView(ViewMod.CALENDAR_VIEW)\n      : setSelectedView(ViewMod.TABLE_VIEW);\n  };\n\n  return (\n    <Layout title=\"Dashboard\">\n      <Box component=\"section\" pt=\"30px\" pb=\"30px\">\n        <Box\n          display={'flex'}\n          justifyContent={'space-between'}\n          alignItems=\"center\"\n        >\n          <Box maxWidth={'400px'}>\n            <ToggleButtonGroup\n              fullWidth\n              color=\"primary\"\n              value={filter}\n              exclusive\n              onChange={handleTogleFilter}\n              aria-label=\"Platform\"\n            >\n              <ToggleButton fullWidth value=\"actual\">\n                Actual\n              </ToggleButton>\n              <ToggleButton fullWidth value=\"history\">\n                History\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </Box>\n          <Box>\n            <Fab\n              component={Link}\n              to=\"/vacation/request\"\n              color=\"primary\"\n              variant=\"extended\"\n              aria-label=\"add\"\n            >\n              <AddIcon />\n              <Box pr=\"20px\" pl=\"20px\">\n                <Typography>New request</Typography>\n              </Box>\n            </Fab>\n          </Box>\n          <Box>\n            <Button variant=\"contained\" onClick={handleChangeView}>\n              {selectedView}\n            </Button>\n          </Box>\n        </Box>\n        <Box overflow=\"auto\" pt=\"30px\" height=\"400px\" width=\"100%\">\n          {selectedView === ViewMod.TABLE_VIEW ? (\n            <DushBoardTableView filter={filter} />\n          ) : null}\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n","import moment from 'moment';\nimport { FilterMod } from '../screens/Dashboard/Dushboard.models';\nimport { IRequest } from './../models/request.models';\n\ninterface IRequestOptions {\n  filter?: FilterMod;\n}\n\nexport const getRequests = async ({ filter }: IRequestOptions) => {\n  const data = localStorage.getItem('requests');\n  if (!data) {\n    return [];\n  }\n  const requests = JSON.parse(data) as IRequest[];\n\n  switch (filter) {\n    case FilterMod.ACTUAL:\n      return requests.filter(({ endDate }) =>\n        moment(endDate).isAfter(moment())\n      );\n    case FilterMod.HISTORY:\n      return requests.filter(({ endDate }) =>\n        moment(endDate).isBefore(moment())\n      );\n    default:\n      return requests;\n  }\n};\n\nexport const addNewRequest = async (request: IRequest) => {\n  const allRequests = await getRequests({});\n  const newRequests = [\n    ...allRequests,\n    { ...request, id: moment(request.endDate).unix() },\n  ];\n  localStorage.setItem('requests', JSON.stringify(newRequests));\n  return request;\n};\n","import { useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Toolbar from '@mui/material/Toolbar';\nimport { Box, Button, Popover, Avatar } from '@mui/material';\n\ninterface IHeaderProps {\n  auth: boolean;\n  title: string;\n  email: string;\n  handleLogOut: () => void;\n}\n\nexport const Header = ({ title, auth, email, handleLogOut }: IHeaderProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setIsOpen(true);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setIsOpen(false);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography\n          textAlign=\"center\"\n          variant=\"h6\"\n          component=\"p\"\n          sx={{ flexGrow: 1 }}\n        >\n          {title}\n        </Typography>\n        {auth && (\n          <div>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <Avatar sx={{ bgcolor: '#74gfhg' }}>\n                {email[0].toUpperCase()}\n              </Avatar>\n            </IconButton>\n            <Popover\n              open={isOpen}\n              anchorEl={anchorEl}\n              onClose={handleClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <Box p=\"20px\">\n                <Typography>{email}</Typography>\n                <Box\n                  color=\"primary\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  width={'100%'}\n                >\n                  <Button title=\"Logout\" onClick={handleLogOut}>\n                    Logout\n                  </Button>\n                </Box>\n              </Box>\n            </Popover>\n          </div>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { Header } from '../Header';\nimport { useUserContext } from '../../contexts/UserContext';\nimport { Container } from '@mui/material';\n\ninterface ILayoutProps {\n  title: string;\n  children: React.ReactNode;\n}\n\nexport const Layout = ({ title, children }: ILayoutProps) => {\n  const { email, handleLogOut, isLoggedIn } = useUserContext();\n\n  return (\n    <>\n      <Header\n        auth={isLoggedIn}\n        email={email}\n        handleLogOut={handleLogOut}\n        title={title}\n      />\n\n      <Container component=\"main\">{children}</Container>\n    </>\n  );\n};\n"],"names":["ViewMod","FilterMod","TABLE_COLUMNS","field","headerName","width","DushBoardTableView","filter","useState","tableRows","setTableRows","isLoading","setIsLoading","useEffect","fetchUserRequest","getRequests","error","console","log","Skeleton","component","height","DataGrid","rows","columns","length","Box","display","justifyContent","Typography","pageSize","rowsPerPageOptions","checkboxSelection","Dashboard","setFilter","selectedView","setSelectedView","Layout","title","pt","pb","alignItems","maxWidth","ToggleButtonGroup","fullWidth","color","value","exclusive","onChange","_","ToggleButton","Fab","Link","to","variant","Add","pr","pl","Button","onClick","overflow","data","localStorage","getItem","requests","JSON","parse","endDate","moment","isAfter","isBefore","addNewRequest","request","allRequests","newRequests","id","unix","setItem","stringify","Header","auth","email","handleLogOut","isOpen","setIsOpen","anchorEl","setAnchorEl","AppBar","position","Toolbar","textAlign","sx","flexGrow","IconButton","size","event","currentTarget","Avatar","bgcolor","toUpperCase","Popover","open","onClose","anchorOrigin","vertical","horizontal","p","children","useUserContext","isLoggedIn","Container"],"sourceRoot":""}