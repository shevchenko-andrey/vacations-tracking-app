{"version":3,"file":"static/js/52.ded5556f.chunk.js","mappings":"qTAaMA,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,GAAGH,aAGxB,SAASI,IACtB,OAAoCC,EAAAA,EAAAA,KAA5BC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAEfC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,MAAO,GACPE,SAAU,GACVU,YAAY,GAGdC,iBAAkBhB,EAElBiB,SAAU,SAAAC,GACRR,EAAYQ,EACd,IAGF,OACE,UAAC,IAAS,CAACC,UAAU,OAAOC,SAAS,KAAI,WACvC,SAAC,KAAW,KACZ,UAAC,IAAG,CAACC,GAAI,EAAGC,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAAQ,WACnE,SAAC,IAAU,CAACL,UAAU,KAAKM,QAAQ,KAAI,oBAGvC,UAAC,IAAG,CAACN,UAAU,OAAOF,SAAUL,EAAOc,aAAcC,YAAU,EAACN,GAAG,IAAG,WACpE,SAAC,IAAS,CACRO,OAAO,SACPxB,UAAQ,EACRyB,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOM,OAAOf,MACrBkC,MAAOzB,EAAO0B,QAAQnC,OAASoC,QAAQ3B,EAAO4B,OAAOrC,OACrDsC,WAAY7B,EAAO0B,QAAQnC,OAASS,EAAO4B,OAAOrC,SAEpD,SAAC,IAAS,CACRyB,OAAO,SACPxB,UAAQ,EACRyB,WAAS,EACTG,KAAK,WACLD,MAAM,WACNW,KAAK,WACLZ,GAAG,WACHG,aAAa,mBACbC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOM,OAAOb,SACrBgC,MAAOzB,EAAO0B,QAAQjC,UAAYkC,QAAQ3B,EAAO4B,OAAOnC,UACxDoC,WAAY7B,EAAO0B,QAAQjC,UAAYO,EAAO4B,OAAOnC,YAEvD,SAAC,IAAgB,CACfsC,SACE,SAAC,IAAQ,CACPX,KAAK,aACLI,MAAM,WACNQ,MAAM,UACNV,SAAUtB,EAAOuB,eAGrBJ,MAAM,iBAER,SAAC,IAAM,CACLW,KAAK,SACLb,WAAS,EACTJ,QAAQ,YACRoB,GAAI,CAAExB,GAAI,EAAGyB,GAAI,GAAI,yBAM1BnC,IAAc,SAAC,KAAQ,CAACoC,GAAG,iBAGlC,C","sources":["screens/login/index.tsx"],"sourcesContent":["import Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Navigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { useUserContext } from '../../contexts/UserContext';\nimport * as Yup from 'yup';\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(4).max(8).required(),\n});\n\nexport default function LoginPage() {\n  const { handleLogin, isLoggedIn } = useUserContext();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      rememberMe: false,\n    },\n\n    validationSchema: loginSchema,\n\n    onSubmit: values => {\n      handleLogin(values);\n    },\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box mt={8} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <Box component=\"form\" onSubmit={formik.handleSubmit} noValidate mt=\"1\">\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"rememberMe\"\n                value=\"remember\"\n                color=\"primary\"\n                onChange={formik.handleChange}\n              />\n            }\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Login\n          </Button>\n        </Box>\n      </Box>\n      {isLoggedIn && <Navigate to=\"/dushboard\" />}\n    </Container>\n  );\n}\n"],"names":["loginSchema","Yup","shape","email","required","password","min","max","LoginPage","useUserContext","handleLogin","isLoggedIn","formik","useFormik","initialValues","rememberMe","validationSchema","onSubmit","values","component","maxWidth","mt","display","flexDirection","alignItems","variant","handleSubmit","noValidate","margin","fullWidth","id","label","name","autoComplete","onChange","handleChange","value","error","touched","Boolean","errors","helperText","type","control","color","sx","mb","to"],"sourceRoot":""}