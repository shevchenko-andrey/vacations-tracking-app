{"version":3,"file":"static/js/174.316cd70f.chunk.js","mappings":"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","sources":["hooks/useCheckBreakpoint.ts","models/dayjs.models.ts","models/request.models.ts","screens/Dashboard/Dashboard.models.ts","screens/Request/Request.tsx","service/vacationsRequestService.ts","shared/Header/Header.tsx","shared/Layout/Layout.tsx","shared/RequestForm/RequestForm.tsx"],"sourcesContent":["import { useMediaQuery, useTheme } from '@mui/material';\n\nexport const useCheckBreakpoint = () => {\n  const theme = useTheme();\n\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  return { isMobile, isDesktop };\n};\n","export enum DateTimeFormat {\n  DOT_FORMAT = 'DD.MM.YYYY',\n  DAY = 'D',\n  SHORT_DAY_OF_WEEK = 'ddd',\n  SPACE_MONTH_YEAR_FORMAT = 'MMMM YYYY',\n}\n","import { Dayjs } from 'dayjs';\n\nexport enum VacationType {\n  Staycation = 'Staycation',\n  Sports_Vacation = 'Sports Vacation',\n  Volunteer_Vacation = 'Volunteer Vacation',\n  Beach_Vacation = 'Beach Vacation',\n  Cruise_Vacation = 'Cruise Vacation',\n  Camping_Vacation = 'Camping vacation',\n  Road_Trip_Vacation = 'Road Trip Vacation',\n  Sightseeing_Type_Of_Vacation = 'Sightseeing Type of Vacation',\n}\n\nexport interface IRequest<D = Dayjs> {\n  type: VacationType;\n  startDate: D | null;\n  endDate: D | null;\n  notes: string;\n}\n\nexport interface IRequestFullData extends IRequest<string> {\n  id: number;\n  action: string;\n}\n","export enum DashboardDataView {\n  TABLE_VIEW = 'table view',\n  CALENDAR_VIEW = 'calendar view',\n}\n\nexport enum DashboardFilterMod {\n  ACTUAL = 'actual',\n  HISTORY = 'history',\n}\n","import Box from '@mui/material/Box';\nimport { IRequest } from '../../models/request.models';\nimport { addNewRequest } from '../../service/vacationsRequestService';\nimport { Layout } from '../../shared/Layout';\nimport { useNavigate } from 'react-router-dom';\nimport { RequestForm } from '../../shared/RequestForm/RequestForm';\n\nconst Request = () => {\n  const navigate = useNavigate();\n\n  const handleSubmit = async (values: IRequest) => {\n    await addNewRequest(values);\n    navigate('/dushboard');\n  };\n\n  return (\n    <Layout title=\"Request new vacantions\" backLinkPath={'/dushboard'}>\n      <Box pt=\"60px\" display=\"flex\" justifyContent=\"center\">\n        <RequestForm handleSubmit={handleSubmit} />\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Request;\n","import dayjs, { Dayjs } from 'dayjs';\nimport { DashboardFilterMod } from '../screens/Dashboard/Dashboard.models';\nimport { IRequest, IRequestFullData } from './../models/request.models';\n\ninterface IRequestOptions {\n  filter?: DashboardFilterMod;\n}\n\nexport const getRequests = async ({ filter }: IRequestOptions) => {\n  const data = localStorage.getItem('requests');\n  if (!data) {\n    return [];\n  }\n  const requests = JSON.parse(data) as IRequestFullData[];\n\n  switch (filter) {\n    case DashboardFilterMod.ACTUAL:\n      return requests.filter(({ endDate }) =>\n        dayjs(endDate).isAfter(dayjs().subtract(1, 'day'))\n      );\n    case DashboardFilterMod.HISTORY:\n      return requests.filter(({ endDate }) => dayjs(endDate).isBefore(dayjs()));\n    default:\n      return requests;\n  }\n};\n\nexport const getRequestById = async (requestId: number) => {\n  const allRequests = await getRequests({});\n  return allRequests.find(({ id }) => requestId === id);\n};\n\nexport const getRequestsForMonth = async (date: Dayjs) => {\n  const allRequests = await getRequests({});\n\n  return allRequests.filter(\n    ({ endDate, startDate }) =>\n      dayjs(endDate).isSame(date, 'month') ||\n      dayjs(startDate).isSame(date, 'month')\n  );\n};\n\nexport const editRequestById = async (\n  requestsId: number,\n  request: IRequest\n) => {\n  await deleteRequestById(requestsId);\n  return addNewRequest(request);\n};\n\nexport const deleteRequestById = async (requestsId: number) => {\n  const allRequests = await getRequests({});\n  const newRequests = allRequests.filter(({ id }) => id !== requestsId);\n  localStorage.setItem('requests', JSON.stringify(newRequests));\n  return;\n};\n\nexport const addNewRequest = async (request: IRequest) => {\n  const allRequests = await getRequests({});\n  const newRequests = [\n    ...allRequests,\n    {\n      ...request,\n      id: dayjs().unix(),\n      action: dayjs(),\n    },\n  ];\n  localStorage.setItem('requests', JSON.stringify(newRequests));\n  return request;\n};\n","import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@mui/material/AppBar';\nimport Typography from '@mui/material/Typography';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Toolbar from '@mui/material/Toolbar';\nimport { Box, Button, Popover, IconButton, Avatar, Fab } from '@mui/material';\nimport { Container } from '@mui/system';\n\ninterface IHeaderProps {\n  auth: boolean;\n  title: string;\n  email: string;\n  backLinkPath?: string;\n  handleLogOut: () => void;\n}\n\nexport const Header: FC<IHeaderProps> = ({\n  title,\n  auth,\n  email,\n  handleLogOut,\n  backLinkPath,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setIsOpen(true);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setIsOpen(false);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container>\n        <Toolbar>\n          <Box>\n            {backLinkPath && (\n              <Fab\n                component={Link}\n                to={backLinkPath}\n                color=\"secondary\"\n                variant=\"circular\"\n              >\n                <ArrowBackIcon />\n              </Fab>\n            )}\n          </Box>\n          <Typography\n            textAlign=\"center\"\n            variant=\"h6\"\n            component=\"p\"\n            sx={{ flexGrow: 1 }}\n          >\n            {title}\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <Avatar sx={{ bgcolor: '#74gfhg' }}>\n                  {email[0].toUpperCase()}\n                </Avatar>\n              </IconButton>\n              <Popover\n                open={isOpen}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n              >\n                <Box p=\"20px\">\n                  <Typography>{email}</Typography>\n                  <Box\n                    color=\"primary\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    width={'100%'}\n                  >\n                    <Button title=\"Logout\" onClick={handleLogOut}>\n                      Logout\n                    </Button>\n                  </Box>\n                </Box>\n              </Popover>\n            </div>\n          )}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import { FC } from 'react';\nimport { Header } from '../Header';\nimport { useUserContext } from '../../contexts/UserContext';\nimport { Container } from '@mui/material';\n\ninterface ILayoutProps {\n  title: string;\n  children: React.ReactNode;\n  backLinkPath?: string;\n}\n\nexport const Layout: FC<ILayoutProps> = ({ title, children, backLinkPath }) => {\n  const { email, handleLogOut, isLoggedIn } = useUserContext();\n\n  return (\n    <>\n      <Header\n        auth={isLoggedIn}\n        email={email}\n        handleLogOut={handleLogOut}\n        title={title}\n        backLinkPath={backLinkPath}\n      />\n\n      <Container component=\"main\">{children}</Container>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport * as Yup from 'yup';\nimport dayjs from 'dayjs';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { TextareaAutosize, Select, InputLabel, MenuItem } from '@mui/material';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { LocalizationProvider, MobileDatePicker } from '@mui/x-date-pickers';\nimport { DateTimeFormat } from '../../models/dayjs.models';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useFormik } from 'formik';\nimport { IRequest, VacationType } from '../../models/request.models';\nimport { useCheckBreakpoint } from '../../hooks/useCheckBreakpoint';\n\nconst requestSchema = Yup.object().shape({\n  type: Yup.string().min(2).max(20).required(),\n  startDate: Yup.date().required(),\n  endDate: Yup.date()\n    .min(\n      Yup.ref('startDate'),\n      'You cannot assign the end of the vacation before it starts'\n    )\n    .required(),\n  notes: Yup.string(),\n});\n\ninterface IRequestFormProps {\n  handleSubmit: (values: IRequest) => void;\n  initialValues?: IRequest;\n}\n\nexport const RequestForm: FC<IRequestFormProps> = ({\n  handleSubmit,\n  initialValues,\n}) => {\n  const { isMobile, isDesktop } = useCheckBreakpoint();\n  const formik = useFormik({\n    initialValues: initialValues ?? {\n      type: VacationType.Sports_Vacation,\n      startDate: null,\n      endDate: null,\n      notes: '',\n    },\n\n    validationSchema: requestSchema,\n\n    onSubmit: handleSubmit,\n  });\n\n  const SelectedDatePicker = isMobile ? MobileDatePicker : DesktopDatePicker;\n\n  const maxDate = dayjs().add(365, 'days');\n\n  const minDate = dayjs();\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={formik.handleSubmit}\n      alignItems=\"center\"\n      noValidate\n      display=\"flex\"\n      justifyContent=\"space-between\"\n    >\n      <Box>\n        <Box>\n          <InputLabel margin=\"dense\" id=\"select-label-type\">\n            Type\n          </InputLabel>\n          <Select\n            fullWidth\n            placeholder=\"Type\"\n            labelId=\"select-label-type\"\n            id=\"vacation-type-select\"\n            name=\"type\"\n            value={formik.values.type}\n            onChange={formik.handleChange}\n          >\n            <MenuItem value={VacationType.Staycation}>Staycation</MenuItem>\n            <MenuItem value={VacationType.Sports_Vacation}>\n              Sports Vacation\n            </MenuItem>\n            <MenuItem value={VacationType.Cruise_Vacation}>\n              Cruise Vacation\n            </MenuItem>\n            <MenuItem value={VacationType.Volunteer_Vacation}>\n              Volunteer Vacation\n            </MenuItem>\n            <MenuItem value={VacationType.Beach_Vacation}>\n              Beach Vacation\n            </MenuItem>\n            <MenuItem value={VacationType.Camping_Vacation}>\n              Camping vacation\n            </MenuItem>\n            <MenuItem value={VacationType.Road_Trip_Vacation}>\n              Road Trip Vacation\n            </MenuItem>\n            <MenuItem value={VacationType.Sightseeing_Type_Of_Vacation}>\n              Sightseeing Type Of Vacation\n            </MenuItem>\n          </Select>\n        </Box>\n\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <SelectedDatePicker\n            maxDate={maxDate}\n            minDate={minDate}\n            label=\"Start Date\"\n            inputFormat={DateTimeFormat.DOT_FORMAT}\n            value={formik.values.startDate}\n            onChange={date => formik.setFieldValue('startDate', date)}\n            renderInput={params => (\n              <TextField\n                error={\n                  formik.touched.startDate && Boolean(formik.errors.endDate)\n                }\n                helperText={\n                  formik.errors.endDate && formik.touched.startDate\n                    ? formik.errors.endDate\n                    : ''\n                }\n                fullWidth\n                margin=\"normal\"\n                required\n                {...params}\n              />\n            )}\n          />\n          <SelectedDatePicker\n            maxDate={maxDate}\n            minDate={formik.values.startDate}\n            label=\"End Date\"\n            inputFormat={DateTimeFormat.DOT_FORMAT}\n            value={formik.values.endDate}\n            onChange={date => formik.setFieldValue('endDate', date)}\n            renderInput={params => (\n              <TextField fullWidth margin=\"normal\" required {...params} />\n            )}\n          />\n        </LocalizationProvider>\n        {isMobile && (\n          <TextareaAutosize\n            id=\"notes\"\n            style={{\n              display: 'block',\n              width: '100%',\n              marginTop: '10px',\n              padding: '10px',\n            }}\n            minRows={15}\n            name=\"notes\"\n            onChange={formik.handleChange}\n            value={formik.values.notes}\n          />\n        )}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Submit\n        </Button>\n      </Box>\n      {isDesktop && (\n        <TextareaAutosize\n          id=\"notes\"\n          style={{\n            display: 'block',\n            width: '100%',\n            marginLeft: '20px',\n            padding: '10px',\n          }}\n          minRows={17}\n          name=\"notes\"\n          onChange={formik.handleChange}\n          value={formik.values.notes}\n        />\n      )}\n    </Box>\n  );\n};\n"],"names":["useCheckBreakpoint","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","isDesktop","up","DateTimeFormat","VacationType","DashboardDataView","DashboardFilterMod","navigate","useNavigate","handleSubmit","values","addNewRequest","Layout","title","backLinkPath","Box","pt","display","justifyContent","RequestForm","getRequests","filter","data","localStorage","getItem","requests","JSON","parse","endDate","dayjs","isAfter","subtract","isBefore","getRequestById","requestId","allRequests","find","id","getRequestsForMonth","date","startDate","isSame","editRequestById","requestsId","request","deleteRequestById","newRequests","setItem","stringify","unix","action","Header","auth","email","handleLogOut","useState","isOpen","setIsOpen","anchorEl","setAnchorEl","AppBar","position","Container","Toolbar","Fab","component","Link","to","color","variant","ArrowBack","Typography","textAlign","sx","flexGrow","IconButton","size","onClick","event","currentTarget","Avatar","bgcolor","toUpperCase","Popover","open","onClose","anchorOrigin","vertical","horizontal","p","width","Button","children","useUserContext","isLoggedIn","requestSchema","Yup","shape","type","min","max","required","notes","initialValues","formik","useFormik","validationSchema","onSubmit","SelectedDatePicker","MobileDatePicker","DesktopDatePicker","maxDate","add","minDate","alignItems","noValidate","margin","fullWidth","placeholder","labelId","name","value","onChange","handleChange","dateAdapter","AdapterDayjs","label","inputFormat","setFieldValue","renderInput","params","error","touched","Boolean","errors","helperText","style","marginTop","padding","minRows","mt","mb","marginLeft"],"sourceRoot":""}