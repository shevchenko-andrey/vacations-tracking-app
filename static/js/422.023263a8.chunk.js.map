{"version":3,"file":"static/js/422.023263a8.chunk.js","mappings":"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","sources":["hooks/useCheckBreakpoint.ts","models/dayjs.models.ts","screens/Dashboard/Dashboard.models.ts","screens/Dashboard/DashboardTableView/DashboardTableView.tsx","screens/Dashboard/DashboardCalendarView/CalendarMonth/CalendarMonth.styled.ts","screens/Dashboard/DashboardCalendarView/CalendarDay/CalendarDay.styled.ts","screens/Dashboard/DashboardCalendarView/CalendarRequestCard/CalendarRequestCardList.tsx","screens/Dashboard/DashboardCalendarView/CalendarDay/CalendarDay.tsx","screens/Dashboard/DashboardCalendarView/CalendarMonth/CalendarMonth.tsx","screens/Dashboard/DashboardCalendarView/CalendarDaysOfWeek/CalendarDaysOfWeek.styled.ts","helpers/createArrayOfDay.ts","screens/Dashboard/DashboardCalendarView/CalendarDaysOfWeek/CalendarDaysOfWeek.tsx","screens/Dashboard/DashboardCalendarView/DashboardCalendarView.tsx","screens/Dashboard/DashboardTogglePannel/DushboardTogglePannel.tsx","screens/Dashboard/DashboardDateControl/DashboardDateControl.tsx","screens/Dashboard/Dashboard.tsx","service/vacationsRequestService.ts","shared/Header/Header.tsx","shared/Layout/Layout.tsx"],"sourcesContent":["import { useMediaQuery, useTheme } from '@mui/material';\n\nexport const useCheckBreakpoint = () => {\n  const theme = useTheme();\n\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  return { isMobile, isDesktop };\n};\n","export enum DateTimeFormat {\n  DOT_FORMAT = 'DD.MM.YYYY',\n  DAY = 'D',\n  SHORT_DAY_OF_WEEK = 'ddd',\n  SPACE_MONTH_YEAR_FORMAT = 'MMMM YYYY',\n}\n","export enum DashboardDataView {\n  TABLE_VIEW = 'table view',\n  CALENDAR_VIEW = 'calendar view',\n}\n\nexport enum DashboardFilterMod {\n  ACTUAL = 'actual',\n  HISTORY = 'history',\n}\n","import dayjs from 'dayjs';\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nimport { Box, Skeleton, Typography } from '@mui/material';\nimport { FC, useEffect, useState } from 'react';\nimport { IRequestFullData } from '../../../models/request.models';\nimport { getRequests } from '../../../service/vacationsRequestService';\nimport { DashboardFilterMod } from '../Dashboard.models';\nimport { DateTimeFormat } from '../../../models/dayjs.models';\nimport { useNavigate } from 'react-router-dom';\n\ninterface ITableViewProps {\n  filter: DashboardFilterMod;\n}\n\nconst TABLE_COLUMNS: GridColDef[] = [\n  { field: 'id', headerName: 'Absence ID', width: 130 },\n  { field: 'type', headerName: 'Type', width: 120 },\n  {\n    field: 'startDate',\n    headerName: 'Start Date',\n    width: 130,\n    valueGetter: (\n      params: GridValueGetterParams<GridColDef, IRequestFullData>\n    ) => dayjs(params.row.startDate).format(DateTimeFormat.DOT_FORMAT),\n  },\n  {\n    field: 'endDate',\n    headerName: 'End Date',\n    width: 130,\n    valueGetter: (\n      params: GridValueGetterParams<GridColDef, IRequestFullData>\n    ) => dayjs(params.row.endDate).format(DateTimeFormat.DOT_FORMAT),\n  },\n  {\n    field: 'notes',\n    headerName: 'Notes',\n    width: 400,\n  },\n  {\n    field: 'action',\n    headerName: 'Action',\n    width: 260,\n    valueGetter: (\n      params: GridValueGetterParams<GridColDef, IRequestFullData>\n    ) => dayjs(params.row.action).fromNow(),\n  },\n];\n\nexport const DashboardTableView: FC<ITableViewProps> = ({ filter }) => {\n  const [tableRows, setTableRows] = useState<IRequestFullData[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserRequest = async () => {\n      const tableRows = await getRequests({ filter });\n      setTableRows(tableRows);\n    };\n    try {\n      setIsLoading(true);\n      fetchUserRequest();\n    } catch (error) {\n    } finally {\n      setIsLoading(false);\n    }\n  }, [filter]);\n\n  if (isLoading) {\n    return (\n      <Skeleton width={'100%'} component=\"div\" height=\"500px\">\n        <DataGrid rows={tableRows} columns={TABLE_COLUMNS} />\n      </Skeleton>\n    );\n  }\n  if (tableRows.length === 0) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Typography>First add data</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <DataGrid\n      onCellClick={({ id }) => navigate(`/vacation/request/${id}`)}\n      rows={tableRows}\n      sx={{ overflow: 'auto', minHeight: '500px', width: '100%' }}\n      columns={TABLE_COLUMNS}\n      pageSize={5}\n      rowsPerPageOptions={[5]}\n    />\n  );\n};\n","import { styled, Box } from '@mui/material';\n\nexport const CalendarGridWrapper = styled(Box)({\n  backgroundColor: '#ccc',\n  display: 'grid',\n  gap: '1px',\n  gridTemplateColumns: 'repeat(7, 1fr)',\n  gridTemplateRows: 'repeat(6, 1fr)',\n});\n","import { styled, Box } from '@mui/material';\n\nexport const CalendarCell = styled(Box)(() => ({\n  cursor: 'pointer',\n  padding: '10px',\n  color: '#fff',\n  minHeight: '200px',\n  position: 'relative',\n}));\n","import { FC } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { IRequestFullData } from '../../../../models/request.models';\n\ninterface IRequestCardProps {\n  requestData: IRequestFullData;\n}\n\nexport const CalendarRequestCard: FC<IRequestCardProps> = ({ requestData }) => {\n  const { type } = requestData;\n\n  return (\n    <Box mt=\"10px\">\n      <Typography textAlign=\"center\">{type}</Typography>\n    </Box>\n  );\n};\n","import { FC } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { Dayjs } from 'dayjs';\nimport * as Styled from './CalendarDay.styled';\nimport { DateTimeFormat } from '../../../../models/dayjs.models';\nimport { IRequestFullData } from '../../../../models/request.models';\nimport { CalendarRequestCard } from '../CalendarRequestCard';\n\nexport interface ICalendarDayProps {\n  day: Dayjs;\n  isSelectedDay: boolean;\n  isVacation: boolean;\n  requestData?: IRequestFullData;\n}\n\nexport const CalendarDay: FC<ICalendarDayProps> = ({\n  day,\n  requestData,\n  isSelectedDay,\n  isVacation,\n}) => {\n  const navigate = useNavigate();\n  return (\n    <Styled.CalendarCell\n      bgcolor={isVacation ? '#83851e' : '#837373'}\n      onClick={() =>\n        isVacation && requestData\n          ? navigate(`/vacation/request/${requestData.id}`)\n          : navigate('/vacation/request/ ')\n      }\n      key={day.unix()}\n    >\n      <Box color={isSelectedDay ? '#ff0000' : '#000'}>\n        <Typography>{day.format(DateTimeFormat.DAY)}</Typography>\n      </Box>\n      <Box\n        width=\"100%\"\n        overflow=\"auto\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n      >\n        {requestData && <CalendarRequestCard requestData={requestData} />}\n      </Box>\n    </Styled.CalendarCell>\n  );\n};\n","import { IRequestFullData } from '../../../../models/request.models';\nimport { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { getRequestsForMonth } from '../../../../service/vacationsRequestService';\nimport dayjs, { Dayjs } from 'dayjs';\nimport * as Styled from './CalendarMonth.styled';\nimport { CalendarDay } from '../CalendarDay';\n\ninterface ICalendarMonthProps {\n  arrayOfDay: Dayjs[];\n  selectedDate: Dayjs;\n}\n\nexport const CalendarMonth: FC<ICalendarMonthProps> = ({\n  arrayOfDay,\n  selectedDate,\n}) => {\n  const [requestData, setRequestData] = useState<IRequestFullData[]>([]);\n\n  useEffect(() => {\n    const fetchVisibleRequests = async () => {\n      const allRequestsForMonth = await getRequestsForMonth(selectedDate);\n      setRequestData(allRequestsForMonth);\n    };\n    try {\n      fetchVisibleRequests();\n    } catch (error) {}\n  }, [selectedDate]);\n\n  const checkIsVacation = useCallback(\n    (day: Dayjs) => {\n      return requestData.some(({ endDate, startDate }) =>\n        day.isBetween(dayjs(startDate).subtract(1, 'day'), endDate)\n      );\n    },\n    [requestData]\n  );\n\n  const calendarDataList = useMemo(\n    () =>\n      arrayOfDay.map(day => ({\n        isVacation: checkIsVacation(day),\n\n        isSelectedDay: day.isSame(selectedDate, 'day'),\n\n        requestData: requestData.find(({ endDate, startDate }) =>\n          day.isBetween(dayjs(startDate).subtract(1, 'day'), endDate)\n        ),\n\n        day,\n      })),\n\n    [arrayOfDay, checkIsVacation, selectedDate, requestData]\n  );\n\n  return (\n    <Styled.CalendarGridWrapper>\n      {calendarDataList.map(\n        ({ day, isVacation, requestData, isSelectedDay }) => (\n          <CalendarDay\n            key={day.unix()}\n            isVacation={isVacation}\n            isSelectedDay={isSelectedDay}\n            requestData={requestData}\n            day={day}\n          />\n        )\n      )}\n    </Styled.CalendarGridWrapper>\n  );\n};\n","import { styled, Box } from '@mui/material';\n\nexport const CalendarDayOfWeek = styled(Box)({\n  padding: '10px',\n  color: '#fff',\n  backgroundColor: '#774353',\n  position: 'relative',\n});\n\nexport const CalendarGridWrapper = styled(Box)({\n  backgroundColor: '#ccc',\n  display: 'grid',\n  gap: '1px',\n  gridTemplateColumns: 'repeat(7,1fr)',\n  gridTemplateRows: '1fr',\n});\n","import { Dayjs } from 'dayjs';\n\nexport const createArrayOfDay = (startDate: Dayjs, amount: number): Dayjs[] => {\n  const arrayOfDay = [...Array(amount - 1)].reduce(\n    (acc: Dayjs[]) => {\n      const nextDay = acc.at(-1)?.add(1, 'day');\n      return [...acc, nextDay];\n    },\n    [startDate]\n  );\n  return arrayOfDay;\n};\n","import { FC } from 'react';\nimport { Dayjs } from 'dayjs';\nimport * as Styled from './CalendarDaysOfWeek.styled';\nimport { DateTimeFormat } from '../../../../models/dayjs.models';\nimport { createArrayOfDay } from '../../../../helpers/createArrayOfDay';\n\nconst AMOUNT_DAY_OF_WEEK = 7;\n\ninterface IDayOfWeekProps {\n  startDayInstance: Dayjs;\n}\n\nexport const CalendarDaysOfWeek: FC<IDayOfWeekProps> = ({\n  startDayInstance,\n}) => {\n  const arrayDayOfWeek = createArrayOfDay(startDayInstance, AMOUNT_DAY_OF_WEEK);\n\n  return (\n    <Styled.CalendarGridWrapper>\n      {arrayDayOfWeek.map(day => {\n        return (\n          <Styled.CalendarDayOfWeek key={day.unix()}>\n            {day.format(DateTimeFormat.SHORT_DAY_OF_WEEK)}\n          </Styled.CalendarDayOfWeek>\n        );\n      })}\n    </Styled.CalendarGridWrapper>\n  );\n};\n","import { FC } from 'react';\nimport { Dayjs } from 'dayjs';\nimport { CalendarMonth } from './CalendarMonth';\nimport { CalendarDaysOfWeek } from './CalendarDaysOfWeek';\nimport { createArrayOfDay } from '../../../helpers/createArrayOfDay';\n\ninterface CalendarViewProps {\n  selectedDate: Dayjs;\n}\n\nconst AMOUNT_OF_DAY_IN_CALENDAR = 42;\n\nexport const DashBoardCalendarView: FC<CalendarViewProps> = ({\n  selectedDate,\n}) => {\n  const startDayInstance = selectedDate.startOf('month').startOf('week');\n\n  const arrayOfDay = createArrayOfDay(\n    startDayInstance,\n    AMOUNT_OF_DAY_IN_CALENDAR\n  );\n\n  return (\n    <>\n      <CalendarDaysOfWeek startDayInstance={startDayInstance} />\n      <CalendarMonth selectedDate={selectedDate} arrayOfDay={arrayOfDay} />\n    </>\n  );\n};\n","import { FC, SetStateAction } from 'react';\nimport { ToggleButton, ToggleButtonGroup, Box } from '@mui/material';\nimport { DashboardFilterMod } from '../Dashboard.models';\n\ninterface TogglePannelProps {\n  filter: string;\n  handleToggleFilter: (\n    _: React.MouseEvent<HTMLElement>,\n    filter: SetStateAction<DashboardFilterMod>\n  ) => void;\n}\n\nexport const DashboardTogglePannel: FC<TogglePannelProps> = ({\n  filter,\n  handleToggleFilter,\n}) => {\n  return (\n    <Box maxWidth={'400px'}>\n      <ToggleButtonGroup\n        fullWidth\n        color=\"primary\"\n        value={filter}\n        exclusive\n        onChange={handleToggleFilter}\n        aria-label=\"Platform\"\n      >\n        <ToggleButton fullWidth value=\"actual\">\n          Actual\n        </ToggleButton>\n        <ToggleButton fullWidth value=\"history\">\n          History\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Box>\n  );\n};\n","import { FC } from 'react';\nimport { Dayjs } from 'dayjs';\nimport { Box } from '@mui/system';\nimport { ButtonGroup, IconButton } from '@mui/material';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { DateTimeFormat } from '../../../models/dayjs.models';\n\ninterface DateControlProps {\n  selectedDate: Dayjs;\n  setSelectedDate: (date: Dayjs) => void;\n}\n\nexport const DashboardDateControl: FC<DateControlProps> = ({\n  setSelectedDate,\n  selectedDate,\n}) => {\n  const handlePickPrevMonth = () => {\n    setSelectedDate(selectedDate.clone().subtract(1, 'month'));\n  };\n\n  const handlePickNextMonth = () => {\n    setSelectedDate(selectedDate.clone().add(1, 'month'));\n  };\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <ButtonGroup\n        variant=\"contained\"\n        aria-label=\"outlined primary button group\"\n      >\n        <IconButton onClick={handlePickPrevMonth}>\n          <NavigateBeforeIcon />\n        </IconButton>\n\n        <IconButton onClick={handlePickNextMonth}>\n          <NavigateNextIcon />\n        </IconButton>\n      </ButtonGroup>\n      <Box ml=\"20px\">\n        {selectedDate.format(DateTimeFormat.SPACE_MONTH_YEAR_FORMAT)}\n      </Box>\n    </Box>\n  );\n};\n","import AddIcon from '@mui/icons-material/Add';\nimport React, { SetStateAction, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout } from '../../shared/Layout';\nimport { DashboardFilterMod, DashboardDataView } from './Dashboard.models';\nimport { Box, Fab, Typography, Button } from '@mui/material';\nimport { DashboardTableView } from './DashboardTableView';\nimport { DashBoardCalendarView } from './DashboardCalendarView';\nimport { DashboardTogglePannel } from './DashboardTogglePannel';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { DashboardDateControl } from './DashboardDateControl';\nimport { useCheckBreakpoint } from '../../hooks/useCheckBreakpoint';\n\nconst Dashboard = () => {\n  const [selectedDate, setSelectedDate] = useState<Dayjs>(() => dayjs());\n  const [filter, setFilter] = useState(DashboardFilterMod.ACTUAL);\n  const [selectedView, setSelectedView] = useState(\n    DashboardDataView.TABLE_VIEW\n  );\n\n  const { isMobile, isDesktop } = useCheckBreakpoint();\n\n  const handleToggleFilter = (\n    _: React.MouseEvent<HTMLElement>,\n    filter: SetStateAction<DashboardFilterMod>\n  ) => {\n    setFilter(filter);\n  };\n\n  const handleChangeView = () => {\n    selectedView === DashboardDataView.TABLE_VIEW\n      ? setSelectedView(DashboardDataView.CALENDAR_VIEW)\n      : setSelectedView(DashboardDataView.TABLE_VIEW);\n  };\n\n  return (\n    <Layout title=\"Dashboard\">\n      <Box component=\"section\" pb=\"60px\" pt=\"30px\">\n        <Box\n          display={'flex'}\n          mt=\"30px\"\n          mb=\"30px\"\n          position=\"relative\"\n          justifyContent={'space-between'}\n          alignItems=\"center\"\n        >\n          {selectedView === DashboardDataView.TABLE_VIEW ? (\n            <DashboardTogglePannel\n              filter={filter}\n              handleToggleFilter={handleToggleFilter}\n            />\n          ) : (\n            <DashboardDateControl\n              selectedDate={selectedDate}\n              setSelectedDate={setSelectedDate}\n            />\n          )}\n          {isDesktop && (\n            <Box top={30} left=\"50%\">\n              <Fab\n                component={Link}\n                to=\"/vacation/request\"\n                color=\"primary\"\n                variant=\"extended\"\n                aria-label=\"add\"\n              >\n                <AddIcon />\n                <Box pr=\"10px\" pl=\"10px\">\n                  <Typography>New request</Typography>\n                </Box>\n              </Fab>\n            </Box>\n          )}\n\n          <Box>\n            <Button variant=\"contained\" onClick={handleChangeView}>\n              {selectedView === DashboardDataView.CALENDAR_VIEW\n                ? DashboardDataView.TABLE_VIEW\n                : DashboardDataView.CALENDAR_VIEW}\n            </Button>\n          </Box>\n        </Box>\n        <Box>\n          {selectedView === DashboardDataView.TABLE_VIEW ? (\n            <DashboardTableView filter={filter} />\n          ) : (\n            <DashBoardCalendarView selectedDate={selectedDate} />\n          )}\n        </Box>\n      </Box>\n      {isMobile && (\n        <Box>\n          <Fab\n            component={Link}\n            to=\"/vacation/request\"\n            color=\"primary\"\n            variant=\"extended\"\n            aria-label=\"add\"\n          >\n            <AddIcon />\n            <Box pr=\"10px\" pl=\"10px\">\n              <Typography>New request</Typography>\n            </Box>\n          </Fab>\n        </Box>\n      )}\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n","import dayjs, { Dayjs } from 'dayjs';\nimport { DashboardFilterMod } from '../screens/Dashboard/Dashboard.models';\nimport { IRequest, IRequestFullData } from './../models/request.models';\n\ninterface IRequestOptions {\n  filter?: DashboardFilterMod;\n}\n\nexport const getRequests = async ({ filter }: IRequestOptions) => {\n  const data = localStorage.getItem('requests');\n  if (!data) {\n    return [];\n  }\n  const requests = JSON.parse(data) as IRequestFullData[];\n\n  switch (filter) {\n    case DashboardFilterMod.ACTUAL:\n      return requests.filter(({ endDate }) =>\n        dayjs(endDate).isAfter(dayjs().subtract(1, 'day'))\n      );\n    case DashboardFilterMod.HISTORY:\n      return requests.filter(({ endDate }) => dayjs(endDate).isBefore(dayjs()));\n    default:\n      return requests;\n  }\n};\n\nexport const getRequestById = async (requestId: number) => {\n  const allRequests = await getRequests({});\n  return allRequests.find(({ id }) => requestId === id);\n};\n\nexport const getRequestsForMonth = async (date: Dayjs) => {\n  const allRequests = await getRequests({});\n\n  return allRequests.filter(\n    ({ endDate, startDate }) =>\n      dayjs(endDate).isSame(date, 'month') ||\n      dayjs(startDate).isSame(date, 'month')\n  );\n};\n\nexport const editRequestById = async (\n  requestsId: number,\n  request: IRequest\n) => {\n  await deleteRequestById(requestsId);\n  return addNewRequest(request);\n};\n\nexport const deleteRequestById = async (requestsId: number) => {\n  const allRequests = await getRequests({});\n  const newRequests = allRequests.filter(({ id }) => id !== requestsId);\n  localStorage.setItem('requests', JSON.stringify(newRequests));\n  return;\n};\n\nexport const addNewRequest = async (request: IRequest) => {\n  const allRequests = await getRequests({});\n  const newRequests = [\n    ...allRequests,\n    {\n      ...request,\n      id: dayjs().unix(),\n      action: dayjs(),\n    },\n  ];\n  localStorage.setItem('requests', JSON.stringify(newRequests));\n  return request;\n};\n","import { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@mui/material/AppBar';\nimport Typography from '@mui/material/Typography';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Toolbar from '@mui/material/Toolbar';\nimport { Box, Button, Popover, IconButton, Avatar, Fab } from '@mui/material';\nimport { Container } from '@mui/system';\n\ninterface IHeaderProps {\n  auth: boolean;\n  title: string;\n  email: string;\n  backLinkPath?: string;\n  handleLogOut: () => void;\n}\n\nexport const Header: FC<IHeaderProps> = ({\n  title,\n  auth,\n  email,\n  handleLogOut,\n  backLinkPath,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setIsOpen(true);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setIsOpen(false);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container>\n        <Toolbar>\n          <Box>\n            {backLinkPath && (\n              <Fab\n                component={Link}\n                to={backLinkPath}\n                color=\"secondary\"\n                variant=\"circular\"\n              >\n                <ArrowBackIcon />\n              </Fab>\n            )}\n          </Box>\n          <Typography\n            textAlign=\"center\"\n            variant=\"h6\"\n            component=\"p\"\n            sx={{ flexGrow: 1 }}\n          >\n            {title}\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <Avatar sx={{ bgcolor: '#74gfhg' }}>\n                  {email[0].toUpperCase()}\n                </Avatar>\n              </IconButton>\n              <Popover\n                open={isOpen}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n              >\n                <Box p=\"20px\">\n                  <Typography>{email}</Typography>\n                  <Box\n                    color=\"primary\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    width={'100%'}\n                  >\n                    <Button title=\"Logout\" onClick={handleLogOut}>\n                      Logout\n                    </Button>\n                  </Box>\n                </Box>\n              </Popover>\n            </div>\n          )}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import { FC } from 'react';\nimport { Header } from '../Header';\nimport { useUserContext } from '../../contexts/UserContext';\nimport { Container } from '@mui/material';\n\ninterface ILayoutProps {\n  title: string;\n  children: React.ReactNode;\n  backLinkPath?: string;\n}\n\nexport const Layout: FC<ILayoutProps> = ({ title, children, backLinkPath }) => {\n  const { email, handleLogOut, isLoggedIn } = useUserContext();\n\n  return (\n    <>\n      <Header\n        auth={isLoggedIn}\n        email={email}\n        handleLogOut={handleLogOut}\n        title={title}\n        backLinkPath={backLinkPath}\n      />\n\n      <Container component=\"main\">{children}</Container>\n    </>\n  );\n};\n"],"names":["useCheckBreakpoint","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","isDesktop","up","DateTimeFormat","DashboardDataView","DashboardFilterMod","TABLE_COLUMNS","field","headerName","width","valueGetter","params","dayjs","row","startDate","format","endDate","action","fromNow","DashboardTableView","filter","useState","tableRows","setTableRows","isLoading","setIsLoading","navigate","useNavigate","useEffect","fetchUserRequest","getRequests","error","Skeleton","component","height","DataGrid","rows","columns","length","Box","display","justifyContent","Typography","onCellClick","id","sx","overflow","minHeight","pageSize","rowsPerPageOptions","CalendarGridWrapper","styled","backgroundColor","gap","gridTemplateColumns","gridTemplateRows","CalendarCell","cursor","padding","color","position","CalendarRequestCard","type","requestData","mt","textAlign","CalendarDay","day","isSelectedDay","isVacation","bgcolor","onClick","flexDirection","unix","CalendarMonth","arrayOfDay","selectedDate","setRequestData","fetchVisibleRequests","getRequestsForMonth","allRequestsForMonth","checkIsVacation","useCallback","some","isBetween","subtract","calendarDataList","useMemo","map","isSame","find","CalendarDayOfWeek","createArrayOfDay","amount","Array","reduce","acc","nextDay","at","add","CalendarDaysOfWeek","startDayInstance","arrayDayOfWeek","DashBoardCalendarView","startOf","DashboardTogglePannel","handleToggleFilter","maxWidth","ToggleButtonGroup","fullWidth","value","exclusive","onChange","ToggleButton","DashboardDateControl","setSelectedDate","alignItems","ButtonGroup","variant","IconButton","clone","NavigateBefore","NavigateNext","ml","setFilter","selectedView","setSelectedView","Layout","title","pb","pt","mb","_","top","left","Fab","Link","to","Add","pr","pl","Button","data","localStorage","getItem","requests","JSON","parse","isAfter","isBefore","getRequestById","requestId","allRequests","date","editRequestById","requestsId","request","deleteRequestById","addNewRequest","newRequests","setItem","stringify","Header","auth","email","handleLogOut","backLinkPath","isOpen","setIsOpen","anchorEl","setAnchorEl","AppBar","Container","Toolbar","ArrowBack","flexGrow","size","event","currentTarget","Avatar","toUpperCase","Popover","open","onClose","anchorOrigin","vertical","horizontal","p","children","useUserContext","isLoggedIn"],"sourceRoot":""}